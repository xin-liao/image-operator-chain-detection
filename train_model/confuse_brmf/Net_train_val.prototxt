name: "Net"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "F:/Code/confuse_brmf/brmf_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "F:/Code/confuse_brmf/brmf_val_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1/spatial"
  type: "Convolution"
  bottom: "data"
  top: "conv1/spatial"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 40
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1/spatial"
  type: "ReLU"
  bottom: "conv1/spatial"
  top: "conv1/spatial"
}
layer {
  name: "pool1/spatial"
  type: "Pooling"
  bottom: "conv1/spatial"
  top: "pool1/spatial"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "pydifflayer"
  type: "Python"
  bottom: "data"
  top: "pydifflayer"
  python_param {
    module: "difflayer"
	layer: "PythonLayer"
  }
}
layer {
  name: "conv1/trans"
  type: "Convolution"
  bottom: "pydifflayer"
  top: "conv1/trans"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1/trans"
  type: "ReLU"
  bottom: "conv1/trans"
  top: "conv1/trans"
}
layer {
  name: "conv2/trans"
  type: "Convolution"
  bottom: "conv1/trans"
  top: "conv2/trans"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2/trans"
  type: "ReLU"
  bottom: "conv2/trans"
  top: "conv2/trans"
}
layer {
  name: "pool1/trans"
  type: "Pooling"
  bottom: "conv2/trans"
  top: "pool1/trans"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2/spatial"
  type: "Convolution"
  bottom: "pool1/spatial"
  top: "conv2/spatial"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 200
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2/spatial"
  type: "ReLU"
  bottom: "conv2/spatial"
  top: "conv2/spatial"
}
layer {
  name: "pool2/spatial"
  type: "Pooling"
  bottom: "conv2/spatial"
  top: "pool2/spatial"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3/trans"
  type: "Convolution"
  bottom: "pool1/trans"
  top: "conv3/trans"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3/trans"
  type: "ReLU"
  bottom: "conv3/trans"
  top: "conv3/trans"
}
layer {
  name: "conv4/trans"
  type: "Convolution"
  bottom: "conv3/trans"
  top: "conv4/trans"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 200
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4/trans"
  type: "ReLU"
  bottom: "conv4/trans"
  top: "conv4/trans"
}
layer {
  name: "pool2/trans"
  type: "Pooling"
  bottom: "conv4/trans"
  top: "pool2/trans"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3/spatial"
  type: "Convolution"
  bottom: "pool2/spatial"
  top: "conv3/spatial"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3/spatial"
  type: "ReLU"
  bottom: "conv3/spatial"
  top: "conv3/spatial"
}
layer {
  name: "conv5/trans"
  type: "Convolution"
  bottom: "pool2/trans"
  top: "conv5/trans"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5/trans"
  type: "ReLU"
  bottom: "conv5/trans"
  top: "conv5/trans"
}
layer {
  name:"concat"
  type:"Concat"
  bottom:"conv3/spatial"
  bottom:"conv5/trans"
  top:"concat"
}

layer {
  name: "conv/fusion"
  type: "Convolution"
  bottom: "concat"
  top: "conv/fusion"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 400
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu/fusion"
  type: "ReLU"
  bottom: "conv/fusion"
  top: "conv/fusion"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv/fusion"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 400
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
